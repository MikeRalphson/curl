? Makefile.in
? autogen.sh
? configure
? lib/Makefile.in
? src/Makefile.in
Index: config.h.in
===================================================================
RCS file: /cvs/curl/curl/config.h.in,v
retrieving revision 1.10
diff -u -r1.10 config.h.in
--- config.h.in	1999/10/17 11:18:34	1.10
+++ config.h.in	1999/11/24 15:15:21
@@ -109,6 +109,9 @@
 /* Define if you have the <getopt.h> header file.  */
 #undef HAVE_GETOPT_H
 
+/* Define if you have the <net/if.h> header file.  */
+#undef HAVE_NET_IF_H
+
 /* Define if you have the <netdb.h> header file.  */
 #undef HAVE_NETDB_H
 
Index: configure.in
===================================================================
RCS file: /cvs/curl/curl/configure.in,v
retrieving revision 1.35
diff -u -r1.35 configure.in
--- configure.in	1999/11/11 21:05:38	1.35
+++ configure.in	1999/11/24 15:15:21
@@ -117,24 +117,26 @@
 
 dnl Checks for header files.
 AC_HEADER_STDC
-AC_CHECK_HEADERS( unistd.h \
-                  arpa/inet.h \
-                  netinet/in.h \
-                  netdb.h \
-                  sys/select.h \
-                  sys/socket.h \
-                  sys/sockio.h \
-                  sys/stat.h \
-                  sys/types.h \
-                  getopt.h \
-                  sys/param.h \
-                  termios.h \
-                  termio.h  \
-                  sgtty.h \
-                  fcntl.h \
-		  dlfcn.h \
-                  alloca.h )
-
+AC_CHECK_HEADERS( \
+        unistd.h \
+        arpa/inet.h \
+        net/if.h \
+        netinet/in.h \
+        netdb.h \
+        sys/select.h \
+        sys/socket.h \
+        sys/sockio.h \
+        sys/stat.h \
+        sys/types.h \
+        getopt.h \
+        sys/param.h \
+        termios.h \
+        termio.h \
+        sgtty.h \
+        fcntl.h \
+        dlfcn.h \
+        alloca.h \
+)
 
 dnl Check for libz header
 dnl AC_CHECK_HEADERS(zlib.h)
Index: include/curl/curl.h
===================================================================
RCS file: /cvs/curl/curl/include/curl/curl.h,v
retrieving revision 1.5
diff -u -r1.5 curl.h
--- curl.h	1999/11/23 08:22:42	1.5
+++ curl.h	1999/11/24 15:15:21
@@ -365,9 +365,13 @@
   TIMECOND_LAST
 } TimeCond;
 
+#ifdef __BEOS__
+#include <support/SupportDefs.h>
+#else
 #ifndef __cplusplus        /* (rabe) */
 typedef char bool;
 #endif                     /* (rabe) */
+#endif
 
 /**********************************************************************
  *
Index: lib/Makefile.am
===================================================================
RCS file: /cvs/curl/curl/lib/Makefile.am,v
retrieving revision 1.16
diff -u -r1.16 Makefile.am
--- Makefile.am	1999/10/22 13:27:36	1.16
+++ Makefile.am	1999/11/24 15:15:21
@@ -9,7 +9,7 @@
 # Some flags needed when trying to cause warnings ;-)
 # CFLAGS = -Wall -pedantic
 
-INCLUDES = -I../include
+INCLUDES = -I$(top_srcdir)/include
 
 libcurl_a_SOURCES = \
 arpa_telnet.h  file.c         getpass.h      netrc.h        timeval.c \
Index: lib/dict.c
===================================================================
RCS file: /cvs/curl/curl/lib/dict.c,v
retrieving revision 1.5
diff -u -r1.5 dict.c
--- dict.c	1999/10/13 22:27:12	1.5
+++ dict.c	1999/11/24 15:15:22
@@ -66,8 +66,12 @@
 #include <unistd.h>
 #endif
 #include <netdb.h>
+#ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
+#endif
+#ifdef HAVE_NET_IF_H
 #include <net/if.h>
+#endif
 #include <sys/ioctl.h>
 #include <signal.h>
 
Index: lib/download.c
===================================================================
RCS file: /cvs/curl/curl/lib/download.c,v
retrieving revision 1.30
diff -u -r1.30 download.c
--- download.c	1999/11/23 08:24:26	1.30
+++ download.c	1999/11/24 15:15:23
@@ -54,6 +54,10 @@
 #include "urldata.h"
 #include <curl/curl.h>
 
+#ifdef __BEOS__
+#include <net/socket.h>
+#endif
+
 #ifdef WIN32
 #if !defined( __GNUC__) || defined(__MINGW32__)
 #include <winsock.h>
Index: lib/file.c
===================================================================
RCS file: /cvs/curl/curl/lib/file.c,v
retrieving revision 1.6
diff -u -r1.6 file.c
--- file.c	1999/11/19 07:25:40	1.6
+++ file.c	1999/11/24 15:15:23
@@ -67,8 +67,12 @@
 #include <unistd.h>
 #endif
 #include <netdb.h>
+#ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
+#endif
+#ifdef HAVE_NET_IF_H
 #include <net/if.h>
+#endif
 #include <sys/ioctl.h>
 #include <signal.h>
 
Index: lib/ftp.c
===================================================================
RCS file: /cvs/curl/curl/lib/ftp.c,v
retrieving revision 1.18
diff -u -r1.18 ftp.c
--- ftp.c	1999/11/23 08:25:06	1.18
+++ ftp.c	1999/11/24 15:15:26
@@ -58,7 +58,9 @@
 #else /* some kind of unix */
 #include <sys/socket.h>
 #include <netinet/in.h>
+#ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
+#endif
 #include <sys/utsname.h>
 #include <netdb.h>
 #endif
Index: lib/getdate.c
===================================================================
RCS file: /cvs/curl/curl/lib/getdate.c,v
retrieving revision 1.5
diff -u -r1.5 getdate.c
--- getdate.c	1999/08/12 06:43:33	1.5
+++ getdate.c	1999/11/24 15:15:31
@@ -1,26 +1,26 @@
 
 /*  A Bison parser, made from getdate.y
- by  GNU Bison version 1.25
+ by  GNU Bison version 1.27
   */
 
 #define YYBISON 1  /* Identify Bison output.  */
 
-#define	tAGO	258
-#define	tDAY	259
-#define	tDAY_UNIT	260
-#define	tDAYZONE	261
-#define	tDST	262
-#define	tHOUR_UNIT	263
-#define	tID	264
-#define	tMERIDIAN	265
-#define	tMINUTE_UNIT	266
-#define	tMONTH	267
-#define	tMONTH_UNIT	268
-#define	tSEC_UNIT	269
-#define	tSNUMBER	270
-#define	tUNUMBER	271
-#define	tYEAR_UNIT	272
-#define	tZONE	273
+#define	tAGO	257
+#define	tDAY	258
+#define	tDAY_UNIT	259
+#define	tDAYZONE	260
+#define	tDST	261
+#define	tHOUR_UNIT	262
+#define	tID	263
+#define	tMERIDIAN	264
+#define	tMINUTE_UNIT	265
+#define	tMONTH	266
+#define	tMONTH_UNIT	267
+#define	tSEC_UNIT	268
+#define	tSNUMBER	269
+#define	tUNUMBER	270
+#define	tYEAR_UNIT	271
+#define	tZONE	272
 
 #line 1 "getdate.y"
 
@@ -211,9 +211,11 @@
 
 #ifndef __cplusplus
 #ifndef __STDC__
+#ifndef const
 #define const
 #endif
 #endif
+#endif
 
 
 
@@ -221,7 +223,7 @@
 #define	YYFLAG		-32768
 #define	YYNTBASE	22
 
-#define YYTRANSLATE(x) ((unsigned)(x) <= 273 ? yytranslate[x] : 32)
+#define YYTRANSLATE(x) ((unsigned)(x) <= 272 ? yytranslate[x] : 32)
 
 static const char yytranslate[] = {     0,
      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
@@ -249,9 +251,9 @@
      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
      2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-     2,     2,     2,     2,     2,     1,     2,     3,     4,     5,
-     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
-    16,    17,    18
+     2,     2,     2,     2,     2,     1,     3,     4,     5,     6,
+     7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
+    17,    18
 };
 
 #if YYDEBUG != 0
@@ -370,7 +372,8 @@
     56
 };
 /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */
-#line 3 "/usr/lib/bison.simple"
+#line 3 "/boot/apps/GeekGadgets/share/bison.simple"
+/* This file comes from bison-1.27.  */
 
 /* Skeleton output parser for bison,
    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.
@@ -387,46 +390,66 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
+   Foundation, Inc., 59 Temple Place - Suite 330,
+   Boston, MA 02111-1307, USA.  */
 
 /* As a special exception, when this file is copied by Bison into a
    Bison output file, you may use that output file without restriction.
    This special exception was added by the Free Software Foundation
    in version 1.24 of Bison.  */
 
-#ifndef alloca
+/* This is the parser code that is written into each bison parser
+  when the %semantic_parser declaration is not specified in the grammar.
+  It was written by Richard Stallman by simplifying the hairy parser
+  used when %semantic_parser is specified.  */
+
+#ifndef YYSTACK_USE_ALLOCA
+#ifdef alloca
+#define YYSTACK_USE_ALLOCA
+#else /* alloca not defined */
 #ifdef __GNUC__
+#define YYSTACK_USE_ALLOCA
 #define alloca __builtin_alloca
 #else /* not GNU C.  */
-#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)
+#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi) || (defined (__sun) && defined (__i386))
+#define YYSTACK_USE_ALLOCA
 #include <alloca.h>
 #else /* not sparc */
-#if defined (MSDOS) && !defined (__TURBOC__)
+/* We think this test detects Watcom and Microsoft C.  */
+/* This used to test MSDOS, but that is a bad idea
+   since that symbol is in the user namespace.  */
+#if (defined (_MSDOS) || defined (_MSDOS_)) && !defined (__TURBOC__)
+#if 0 /* No need for malloc.h, which pollutes the namespace;
+	 instead, just don't use alloca.  */
 #include <malloc.h>
+#endif
 #else /* not MSDOS, or __TURBOC__ */
 #if defined(_AIX)
-#include <malloc.h>
+/* I don't know what this was needed for, but it pollutes the namespace.
+   So I turned it off.   rms, 2 May 1997.  */
+/* #include <malloc.h>  */
  #pragma alloca
-#else /* not MSDOS, __TURBOC__, or _AIX */
-#ifdef __hpux
-#ifdef __cplusplus
-extern "C" {
-void *alloca (unsigned int);
-};
-#else /* not __cplusplus */
-void *alloca ();
-#endif /* not __cplusplus */
+#define YYSTACK_USE_ALLOCA
+#else /* not MSDOS, or __TURBOC__, or _AIX */
+#if 0
+#ifdef __hpux /* haible@ilog.fr says this works for HPUX 9.05 and up,
+		 and on HPUX 10.  Eventually we can turn this on.  */
+#define YYSTACK_USE_ALLOCA
+#define alloca __builtin_alloca
 #endif /* __hpux */
+#endif
 #endif /* not _AIX */
 #endif /* not MSDOS, or __TURBOC__ */
-#endif /* not sparc.  */
-#endif /* not GNU C.  */
-#endif /* alloca not defined.  */
+#endif /* not sparc */
+#endif /* not GNU C */
+#endif /* alloca not defined */
+#endif /* YYSTACK_USE_ALLOCA not defined */
 
-/* This is the parser code that is written into each bison parser
-  when the %semantic_parser declaration is not specified in the grammar.
-  It was written by Richard Stallman by simplifying the hairy parser
-  used when %semantic_parser is specified.  */
+#ifdef YYSTACK_USE_ALLOCA
+#define YYSTACK_ALLOC alloca
+#else
+#define YYSTACK_ALLOC malloc
+#endif
 
 /* Note: there must be only one dollar sign in this file.
    It is replaced by the list of actions, each action
@@ -436,8 +459,8 @@
 #define yyclearin	(yychar = YYEMPTY)
 #define YYEMPTY		-2
 #define YYEOF		0
-#define YYACCEPT	return(0)
-#define YYABORT 	return(1)
+#define YYACCEPT	goto yyacceptlab
+#define YYABORT 	goto yyabortlab
 #define YYERROR		goto yyerrlab1
 /* Like YYERROR except do call yyerror.
    This remains here temporarily to ease the
@@ -518,12 +541,12 @@
 #ifndef YYMAXDEPTH
 #define YYMAXDEPTH 10000
 #endif
-
-/* Prevent warning if -Wstrict-prototypes.  */
-#ifdef __GNUC__
-int yyparse (void);
-#endif
 
+/* Define __yy_memcpy.  Note that the size argument
+   should be passed with type unsigned int, because that is what the non-GCC
+   definitions require.  With GCC, __builtin_memcpy takes an arg
+   of type size_t, but it can handle unsigned int.  */
+
 #if __GNUC__ > 1		/* GNU C and GNU C++ define this.  */
 #define __yy_memcpy(TO,FROM,COUNT)	__builtin_memcpy(TO,FROM,COUNT)
 #else				/* not GNU C or C++ */
@@ -535,7 +558,7 @@
 __yy_memcpy (to, from, count)
      char *to;
      char *from;
-     int count;
+     unsigned int count;
 {
   register char *f = from;
   register char *t = to;
@@ -550,10 +573,10 @@
 /* This is the most reliable way to avoid incompatibilities
    in available built-in functions on various systems.  */
 static void
-__yy_memcpy (char *to, char *from, int count)
+__yy_memcpy (char *to, char *from, unsigned int count)
 {
-  register char *f = from;
   register char *t = to;
+  register char *f = from;
   register int i = count;
 
   while (i-- > 0)
@@ -563,7 +586,7 @@
 #endif
 #endif
 
-#line 196 "/usr/lib/bison.simple"
+#line 216 "/boot/apps/GeekGadgets/share/bison.simple"
 
 /* The user can define YYPARSE_PARAM as the name of an argument to be passed
    into yyparse.  The argument should have type void *.
@@ -584,6 +607,15 @@
 #define YYPARSE_PARAM_DECL
 #endif /* not YYPARSE_PARAM */
 
+/* Prevent warning if -Wstrict-prototypes.  */
+#ifdef __GNUC__
+#ifdef YYPARSE_PARAM
+int yyparse (void *);
+#else
+int yyparse (void);
+#endif
+#endif
+
 int
 yyparse(YYPARSE_PARAM_ARG)
      YYPARSE_PARAM_DECL
@@ -612,6 +644,7 @@
 #endif
 
   int yystacksize = YYINITDEPTH;
+  int yyfree_stacks = 0;
 
 #ifdef YYPURE
   int yychar;
@@ -696,18 +729,32 @@
       if (yystacksize >= YYMAXDEPTH)
 	{
 	  yyerror("parser stack overflow");
+	  if (yyfree_stacks)
+	    {
+	      free (yyss);
+	      free (yyvs);
+#ifdef YYLSP_NEEDED
+	      free (yyls);
+#endif
+	    }
 	  return 2;
 	}
       yystacksize *= 2;
       if (yystacksize > YYMAXDEPTH)
 	yystacksize = YYMAXDEPTH;
-      yyss = (short *) alloca (yystacksize * sizeof (*yyssp));
-      __yy_memcpy ((char *)yyss, (char *)yyss1, size * sizeof (*yyssp));
-      yyvs = (YYSTYPE *) alloca (yystacksize * sizeof (*yyvsp));
-      __yy_memcpy ((char *)yyvs, (char *)yyvs1, size * sizeof (*yyvsp));
+#ifndef YYSTACK_USE_ALLOCA
+      yyfree_stacks = 1;
+#endif
+      yyss = (short *) YYSTACK_ALLOC (yystacksize * sizeof (*yyssp));
+      __yy_memcpy ((char *)yyss, (char *)yyss1,
+		   size * (unsigned int) sizeof (*yyssp));
+      yyvs = (YYSTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yyvsp));
+      __yy_memcpy ((char *)yyvs, (char *)yyvs1,
+		   size * (unsigned int) sizeof (*yyvsp));
 #ifdef YYLSP_NEEDED
-      yyls = (YYLTYPE *) alloca (yystacksize * sizeof (*yylsp));
-      __yy_memcpy ((char *)yyls, (char *)yyls1, size * sizeof (*yylsp));
+      yyls = (YYLTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yylsp));
+      __yy_memcpy ((char *)yyls, (char *)yyls1,
+		   size * (unsigned int) sizeof (*yylsp));
 #endif
 #endif /* no yyoverflow */
 
@@ -1230,7 +1277,7 @@
     break;}
 }
    /* the action file gets copied in in place of this dollarsign */
-#line 498 "/usr/lib/bison.simple"
+#line 542 "/boot/apps/GeekGadgets/share/bison.simple"
 
   yyvsp -= yylen;
   yyssp -= yylen;
@@ -1425,6 +1472,30 @@
 
   yystate = yyn;
   goto yynewstate;
+
+ yyacceptlab:
+  /* YYACCEPT comes here.  */
+  if (yyfree_stacks)
+    {
+      free (yyss);
+      free (yyvs);
+#ifdef YYLSP_NEEDED
+      free (yyls);
+#endif
+    }
+  return 0;
+
+ yyabortlab:
+  /* YYABORT comes here.  */
+  if (yyfree_stacks)
+    {
+      free (yyss);
+      free (yyvs);
+#ifdef YYLSP_NEEDED
+      free (yyls);
+#endif
+    }
+  return 1;
 }
 #line 451 "getdate.y"
 
Index: lib/hostip.c
===================================================================
RCS file: /cvs/curl/curl/lib/hostip.c,v
retrieving revision 1.8
diff -u -r1.8 hostip.c
--- hostip.c	1999/10/13 22:27:12	1.8
+++ hostip.c	1999/11/24 15:15:31
@@ -53,7 +53,9 @@
 #endif
 #include <netinet/in.h>
 #include <netdb.h>
+#ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
+#endif
 #endif
 
 #include "urldata.h"
Index: lib/http.c
===================================================================
RCS file: /cvs/curl/curl/lib/http.c,v
retrieving revision 1.17
diff -u -r1.17 http.c
--- http.c	1999/10/30 15:43:52	1.17
+++ http.c	1999/11/24 15:15:31
@@ -66,8 +66,12 @@
 #include <unistd.h>
 #endif
 #include <netdb.h>
+#ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
+#endif
+#ifdef HAVE_NET_IF_H
 #include <net/if.h>
+#endif
 #include <sys/ioctl.h>
 #include <signal.h>
 
Index: lib/if2ip.c
===================================================================
RCS file: /cvs/curl/curl/lib/if2ip.c,v
retrieving revision 1.7
diff -u -r1.7 if2ip.c
--- if2ip.c	1999/10/13 22:27:12	1.7
+++ if2ip.c	1999/11/24 15:15:31
@@ -48,13 +48,17 @@
 #include <unistd.h>
 #endif
 
-#ifndef WIN32
+#if ! defined(WIN32) && ! defined(__BEOS__)
 
 #include <sys/socket.h>
 #include <netinet/in.h>
+#ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
+#endif
 #include <netinet/in.h>
+#ifdef HAVE_NET_IF_H
 #include <net/if.h>
+#endif
 #include <sys/ioctl.h>
 
 /* -- if2ip() -- */
Index: lib/if2ip.h
===================================================================
RCS file: /cvs/curl/curl/lib/if2ip.h,v
retrieving revision 1.5
diff -u -r1.5 if2ip.h
--- if2ip.h	1999/10/13 22:27:12	1.5
+++ if2ip.h	1999/11/24 15:15:31
@@ -41,7 +41,7 @@
  ****************************************************************************/
 #include <curl/setup.h>
 
-#ifndef WIN32
+#if ! defined(WIN32) && ! defined(__BEOS__)
 char *if2ip(char *interface);
 #else
 #define if2ip(x) NULL
Index: lib/telnet.c
===================================================================
RCS file: /cvs/curl/curl/lib/telnet.c,v
retrieving revision 1.9
diff -u -r1.9 telnet.c
--- telnet.c	1999/10/13 22:27:12	1.9
+++ telnet.c	1999/11/24 15:15:32
@@ -74,8 +74,12 @@
 #include <unistd.h>
 #endif
 #include <netdb.h>
+#ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
+#endif
+#ifdef HAVE_NET_IF_H
 #include <net/if.h>
+#endif
 #include <sys/ioctl.h>
 #include <signal.h>
 
Index: lib/upload.c
===================================================================
RCS file: /cvs/curl/curl/lib/upload.c,v
retrieving revision 1.9
diff -u -r1.9 upload.c
--- upload.c	1999/10/13 22:27:12	1.9
+++ upload.c	1999/11/24 15:15:32
@@ -58,6 +58,11 @@
 #endif
 
 #include <curl/curl.h>
+
+#ifdef __BEOS__
+#include <net/socket.h>
+#endif
+
 #include "urldata.h"
 #include "speedcheck.h"
 #include "sendf.h"
Index: lib/url.c
===================================================================
RCS file: /cvs/curl/curl/lib/url.c,v
retrieving revision 1.31
diff -u -r1.31 url.c
--- url.c	1999/11/19 07:07:10	1.31
+++ url.c	1999/11/24 15:15:36
@@ -71,8 +71,12 @@
 #include <unistd.h>
 #endif
 #include <netdb.h>
+#ifdef HAVE_ARPA_INET_H
 #include <arpa/inet.h>
+#endif
+#ifdef HAVE_NET_IF_H
 #include <net/if.h>
+#endif
 #include <sys/ioctl.h>
 #include <signal.h>
 
Index: src/Makefile.am
===================================================================
RCS file: /cvs/curl/curl/src/Makefile.am,v
retrieving revision 1.13
diff -u -r1.13 Makefile.am
--- Makefile.am	1999/10/13 22:50:30	1.13
+++ Makefile.am	1999/11/24 15:15:36
@@ -6,7 +6,7 @@
 # CFLAGS = -Wall -pedantic
 CPPFLAGS = -DGLOBURL -DCURL_SEPARATORS
 
-INCLUDES = -I../include
+INCLUDES = -I$(top_srcdir)/include
 
 bin_PROGRAMS = curl
 
@@ -22,6 +22,6 @@
 AUTOMAKE_OPTIONS = foreign no-dependencies
 
 # This generates the hugehelp.c file
-hugehelp.c: ../README.curl ../curl.1 mkhelp.pl
+hugehelp.c: $(top_srcdir)/README.curl $(top_srcdir)/curl.1 mkhelp.pl
 	rm -f hugehelp.c
-	$(NROFF) -man ../curl.1 | $(PERL) mkhelp.pl ../README.curl > hugehelp.c
+	$(NROFF) -man $(top_srcdir)/curl.1 | $(PERL) $(top_srcdir)/src/mkhelp.pl $(top_srcdir)/README.curl > hugehelp.c
